/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Oop;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ozan
 */
public class Analyze extends javax.swing.JFrame {

    WordAnalyzer analyzer = new WordAnalyzer();
    ArrayList<Article> list;
    ArrayList<Node> firstwordList;
    ArrayList<Node> firsttrigramList;
    ArrayList<Node> secondwordList;
    ArrayList<Node> secondtrigramList;
    DefaultTableModel firstwordTableModel;
    DefaultTableModel firsttrigramTableModel;
    DefaultTableModel secondwordTableModel;
    DefaultTableModel secondtrigramTableModel;
    Jaccard jaccard;
     Weighted_Jaccard wjaccard ;
    /* Creates new form AnalyzeCompare
     */
    public Analyze(ArrayList<Article> list) {
        initComponents();
        firstArticleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(list.toArray()));
        secondArticleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(list.toArray()));
        firstwordTableModel = (DefaultTableModel) wordTable1.getModel();
        firsttrigramTableModel = (DefaultTableModel) trigramTable1.getModel();
        secondwordTableModel = (DefaultTableModel) wordTable2.getModel();
        secondtrigramTableModel = (DefaultTableModel) trigramTable2.getModel();
        this.list = list;
    }

    public void TabloDoldur() throws IOException {
            int counter=(Integer)dataCountSpinner.getValue();
            String[] node1 ;
            String[] node2 ;
        for (Article a : list) {

            if (Integer.parseInt(firstArticleComboBox.getSelectedItem().toString())== a.getId()) {
               firstwordList = analyzer.splitWord(a.getContent());
               firsttrigramList =analyzer.TrigramGenerator();
              
            }
            if (Integer.parseInt(secondArticleComboBox.getSelectedItem().toString()) == a.getId())
            {
                secondwordList = analyzer.splitWord(a.getContent());
                secondtrigramList =analyzer.TrigramGenerator();
            }
           
        }
        for (int i =0;i<firstwordList.size();i++)
        {
            
            if (counter>0)
            {
                  node1=new String[2];
                  node1[1]=firstwordList.get(i).getData();
                  node1[0]=firstwordList.get(i).toString();
                  firstwordTableModel.addRow(node1);
                  counter--;
                
            }
            
        }
         counter=(Integer)dataCountSpinner.getValue();
        for (int k=0;k<firsttrigramList.size();k++)
        {
            if (counter>0)
            {
                  node1=new String[2];
                  node1[1]=firsttrigramList.get(k).getData();
                  node1[0]=firsttrigramList.get(k).toString();
                  firsttrigramTableModel.addRow(node1);
                  counter--;
                
            } 
        }
        
        counter=(Integer)dataCountSpinner.getValue();
        for (int m =0;m<secondwordList.size();m++)
        {
            
            if (counter>0)
            {
                  node2=new String[2];
                  node2[1]=secondwordList.get(m).getData();
                  node2[0]=secondwordList.get(m).toString();
                  secondwordTableModel.addRow(node2);
                  counter--;
                
            }
            
        }
         counter=(Integer)dataCountSpinner.getValue();
        for (int n=0;n<secondtrigramList.size();n++)
        {
            if (counter>0)
            {
                  node2=new String[2];
                  node2[1]=secondtrigramList.get(n).getData();
                  node2[0]=secondtrigramList.get(n).toString();
                  secondtrigramTableModel.addRow(node2);
                  counter--;
                
            } 
        }
    }

    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dataCountSpinner = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        wordTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        trigramTable1 = new javax.swing.JTable();
        wordAnalyzeBtn = new javax.swing.JButton();
        firstArticleComboBox = new javax.swing.JComboBox<>();
        SmilarityAnalyzeBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        trigramTable2 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        wordTable2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        secondArticleComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        resultArea = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("1. Makaleyi Seçiniz");

        jLabel2.setText("Görüntülenecek veri sayisi");

        dataCountSpinner.setModel(new javax.swing.SpinnerNumberModel(50, 0, 50, 1));

        wordTable1.setAutoCreateRowSorter(true);
        wordTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Count", "Word"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(wordTable1);

        trigramTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Count", "Trigram"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(trigramTable1);

        wordAnalyzeBtn.setText("Kelime Analizi");
        wordAnalyzeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordAnalyzeBtnActionPerformed(evt);
            }
        });

        firstArticleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ozan", "furkan" }));

        SmilarityAnalyzeBtn.setText("Benzerlik Analizi");
        SmilarityAnalyzeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SmilarityAnalyzeBtnActionPerformed(evt);
            }
        });

        trigramTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Count", "Trigram"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(trigramTable2);

        wordTable2.setAutoCreateRowSorter(true);
        wordTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Count", "Word"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(wordTable2);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("1.Makale Analizi");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("2.Makale Analizi");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("2. Makaleyi Seçiniz");

        resultArea.setEditable(false);
        resultArea.setColumns(20);
        resultArea.setRows(5);
        jScrollPane5.setViewportView(resultArea);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Benzerlik Sonucu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(secondArticleComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(firstArticleComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 112, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dataCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(wordAnalyzeBtn)
                            .addComponent(SmilarityAnalyzeBtn))
                        .addGap(11, 11, 11))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane5)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(secondArticleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(firstArticleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dataCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(wordAnalyzeBtn)
                                .addGap(18, 18, 18)
                                .addComponent(SmilarityAnalyzeBtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void wordAnalyzeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordAnalyzeBtnActionPerformed
        try {
            // TODO add your handling code here:
            TabloDoldur();
        } catch (IOException ex) {
            Logger.getLogger(Analyze.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_wordAnalyzeBtnActionPerformed

    private void SmilarityAnalyzeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SmilarityAnalyzeBtnActionPerformed
         jaccard= new Jaccard();
         wjaccard = new Weighted_Jaccard();
         Strategy_Context context1 =new Strategy_Context(new Jaccard());
         Strategy_Context context2 =new Strategy_Context(new Weighted_Jaccard());
        
        
       
       
         resultArea.setText("Jaccard yöntemine göre:\n"+"Kelime benzerlik orani : "+context1.executeStrategyWord(firstwordList, secondwordList)+"\n"+
                           "Trigram benzerlik orani : "+context1.executeStrategyTrigram(firstwordList, secondwordList)+"\n"+
                            "Weighted Jaccard yöntemine göre:\n"+"Kelime benzerlik orani : "+ context2.executeStrategyWord(firstwordList, secondwordList)+"\n"+
                            "Trigram benzerlik orani : "+context2.executeStrategyTrigram(firstwordList, secondwordList));
     
    }//GEN-LAST:event_SmilarityAnalyzeBtnActionPerformed

    public void Analyzer(ArrayList<Article> list) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Analyze.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Analyze.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Analyze.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Analyze.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Analyze(list).setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SmilarityAnalyzeBtn;
    private javax.swing.JSpinner dataCountSpinner;
    private javax.swing.JComboBox<Object> firstArticleComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea resultArea;
    private javax.swing.JComboBox<Object> secondArticleComboBox;
    private javax.swing.JTable trigramTable1;
    private javax.swing.JTable trigramTable2;
    private javax.swing.JButton wordAnalyzeBtn;
    private javax.swing.JTable wordTable1;
    private javax.swing.JTable wordTable2;
    // End of variables declaration//GEN-END:variables
}
